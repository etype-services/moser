<?php

/**
 * Implements hook_block_info().
 */
function etype_smugmug_block_info() {
  $blocks = array();

  $blocks['Smugmug'] = array(
    'info' => t('Smugmug'),
  );
  
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function etype_smugmug_block_view($delta = '') {
  $block = array();
  switch ($delta) {

    case 'Smugmug':
      $block['subject'] = '';
      $block['content'] = _etype_smugmug_content();
      break;
    
  }
  return $block;
}

/**
 * Smugmug Block
 * @return null
 */
function _etype_smugmug_content() {

    $user_name = 'fredericksburgstandard';
    $api_key = 'SxFKHHZ7q4tPVbjLxkRTbDbcn7pCtBjM';

    require_once '/data/web/vendor/autoload.php';
    $output = '';

    try {

        $options = [
            'AppName' => 'FredericksburgStandard.com',
            '_verbosity' => 1
        ];

        $client = new phpSmug\Client($api_key, $options);
        $albums = $client->get("user/{$user_name}!albums", array('count' => 1));
        $images = $client->get($albums->Album[0]->Uris->AlbumImages, array('count' => 25));
        var_dump($images);

        exit;

        if (count($albums) > 0) {
            $tmp = $albums->Album[0]->Uris->AlbumImages;
            if (count($tmp) == 0) {
                $tmp = $albums->Album[1]->Uris->AlbumImages;
            }
            if (count($tmp) > 0) {
                $images = $client->get($tmp, array('count' => 25));
                foreach ($images->AlbumImage as $image) {
                    var_dump($image);
                    //$output .= sprintf('<a href="%s" target="_blank"><img src="%s" title="%s" alt="%s" width="150"  class="smugmug_thumb" /></a>', $image->WebUri, $image->ThumbnailUrl, $image->Title, $image->ImageKey);
                }
            } else {
                $output .= 'No SmugMug images found.';
            }
        } else {
            $output .= 'No SmugMug albums found.';
        }

    } catch (Exception $e) {
        $output .= sprintf('%s (Error Code: %d)', $e->getMessage(), $e->getCode());
    }

    return $output;
}
